---
import BaseLayout from '@layouts/BaseLayout.astro';
import type { GetStaticPaths } from 'astro';
import { aiServiceContent } from '@/data/aiServiceContent';

export function getStaticPaths() {
  return Object.keys(aiServiceContent).map((slug) => ({
    params: { slug },
  }));
}

const { slug } = Astro.params;
const service = aiServiceContent[slug as keyof typeof aiServiceContent];

if (!service) {
  return Astro.redirect('/404');
}
---

<BaseLayout
  title={`${service.title} | AI Services - WebnDigital`}
  description={service.description}
>
  <!-- Hero Section -->
  <section class="service-hero section">
    <div class="container">
      <a href="/#ai-solutions" class="back-link">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
          <path d="M12 16L6 10L12 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        Back to AI Solutions
      </a>
      
      <div class="service-hero-content">
        <h1 class="service-hero-title">
          <span class="service-hero-main">{service.title}</span>
          <span class="service-hero-subtitle italic-serif">{service.subtitle}</span>
        </h1>
        <p class="service-hero-description">{service.longDescription}</p>
        
        <div class="service-hero-meta">
          <div class="meta-item">
            <span class="meta-label">Timeline</span>
            <span class="meta-value">{service.timeline} <span class="meta-note">(May vary based on project scope)</span></span>
          </div>
        </div>
        
        <a href={`/contact?service=${slug}`} class="btn btn-primary btn-lg">
          Start Your Project
          <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
            <path d="M4 10H16M16 10L10 4M16 10L10 16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </a>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="service-features section">
    <div class="container">
      <h2 class="section-title">What's Included</h2>
      <div class="features-grid">
        {service.features.map((feature) => (
          <div class="feature-card">
            <div class="feature-icon purple">
              <svg width="32" height="32" viewBox="0 0 32 32" fill="none">
                <path d="M26.6667 8L12 22.6667L5.33334 16" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <h3 class="feature-title">{feature.title}</h3>
            <p class="feature-description">{feature.description}</p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Benefits Section -->
  <section class="service-benefits section">
    <div class="container">
      <div class="benefits-content">
        <div class="benefits-text">
          <h2 class="section-title">Why Choose This Solution?</h2>
          <ul class="benefits-list">
            {service.benefits.map((benefit) => (
              <li>
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                  <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                {benefit}
              </li>
            ))}
          </ul>
        </div>
        <div class="benefits-image">
          <img src={service.image} alt={service.title} loading="lazy" />
        </div>
      </div>
    </div>
  </section>

  <!-- Process Section -->
  <section class="service-process section">
    <div class="container">
      <h2 class="section-title">Our Process</h2>
      <div class="process-steps">
        {service.process.map((step, index) => (
          <div class="process-step">
            <div class="step-number purple">{index + 1}</div>
            <div class="step-content">
              <h3 class="step-title">{step.step}</h3>
              <p class="step-description">{step.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Ideal For Section -->
  <section class="service-ideal section">
    <div class="container">
      <h2 class="section-title">Ideal For</h2>
      <div class="ideal-grid">
        {service.ideal.map((item) => (
          <div class="ideal-card">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="purple-icon">
              <path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z" fill="currentColor"/>
            </svg>
            {item}
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="service-cta section">
    <div class="container">
      <div class="cta-content">
        <h2 class="cta-title">Ready to get started?</h2>
        <p class="cta-text">Let's discuss your AI project and create intelligent solutions together.</p>
        <div class="cta-buttons">
          <a href={`/contact?service=${slug}`} class="btn btn-primary btn-lg">
            Start Your Project
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M4 10H16M16 10L10 4M16 10L10 16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
          <a href="/portfolio" class="btn btn-secondary btn-lg">
            View Our Work
          </a>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .service-hero {
    padding: 3rem 0 4rem;
  }
  
  .back-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--color-text-gray);
    text-decoration: none;
    margin-bottom: 2rem;
    transition: all var(--transition-base);
  }
  
  .back-link:hover {
    color: #9333EA;
    gap: 0.75rem;
  }
  
  .service-hero-content {
    max-width: 800px;
  }
  
  .service-hero-title {
    margin-bottom: 1.5rem;
  }
  
  .service-hero-main {
    display: block;
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 400;
    line-height: 1.05;
    margin-bottom: 0.5rem;
  }
  
  .service-hero-subtitle {
    display: block;
    font-size: clamp(1.5rem, 3vw, 2.5rem);
    line-height: 1.2;
    color: var(--color-text-gray);
  }
  
  .service-hero-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: var(--color-text-gray);
    margin-bottom: 2rem;
  }
  
  .service-hero-meta {
    display: flex;
    gap: 3rem;
    margin-bottom: 2rem;
    padding: 1.5rem 0;
    border-top: 1px solid var(--color-border-light);
    border-bottom: 1px solid var(--color-border-light);
  }
  
  .meta-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .meta-label {
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    color: var(--color-text-gray);
  }
  
  .meta-value {
    font-size: 1.25rem;
    font-weight: 500;
    color: var(--color-black);
  }
  
  .meta-note {
    font-size: 0.875rem;
    font-weight: 400;
    color: var(--color-text-gray);
    font-style: italic;
  }
  
  .btn-lg {
    padding: 1rem 2.5rem;
    font-size: 1rem;
    font-weight: 500;
    border-radius: var(--radius-md);
    transition: all 0.3s ease;
    border: 2px solid #9333EA;
    background: #9333EA;
    color: var(--color-white);
    box-shadow: 0 4px 12px rgba(147, 51, 234, 0.2);
  }
  
  .btn-lg:hover {
    background: transparent;
    color: #9333EA;
    box-shadow: 0 6px 20px rgba(147, 51, 234, 0.3);
    transform: translateY(-2px);
  }
  
  .service-features {
    background: #fafbfc;
  }
  
  .section-title {
    font-size: clamp(2rem, 4vw, 2.5rem);
    font-weight: 400;
    margin-bottom: 3rem;
    text-align: center;
  }
  
  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }
  
  .feature-card {
    background: var(--color-white);
    padding: 2rem;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
    transition: all var(--transition-base);
  }
  
  .feature-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-md);
  }
  
  .feature-icon {
    width: 48px;
    height: 48px;
    border-radius: var(--radius-md);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
    color: var(--color-white);
  }
  
  .feature-icon.purple {
    background: linear-gradient(135deg, #9333EA 0%, #7E22CE 100%);
  }
  
  .feature-title {
    font-size: 1.25rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--color-black);
  }
  
  .feature-description {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--color-text-gray);
  }
  
  .benefits-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
  }
  
  .benefits-list {
    list-style: none;
    padding: 0;
    margin: 2rem 0 0;
  }
  
  .benefits-list li {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    font-size: 1.125rem;
    line-height: 1.6;
    margin-bottom: 1rem;
    color: var(--color-text-gray);
  }
  
  .benefits-list svg {
    flex-shrink: 0;
    margin-top: 0.25rem;
    color: #9333EA;
  }
  
  .benefits-image {
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-lg);
  }
  
  .benefits-image img {
    width: 100%;
    height: auto;
    display: block;
  }
  
  .service-process {
    background: #fafbfc;
  }
  
  .process-steps {
    max-width: 700px;
    margin: 0 auto;
  }
  
  .process-step {
    display: flex;
    gap: 2rem;
    margin-bottom: 3rem;
  }
  
  .process-step:last-child {
    margin-bottom: 0;
  }
  
  .step-number {
    flex-shrink: 0;
    width: 56px;
    height: 56px;
    color: var(--color-white);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 500;
  }
  
  .step-number.purple {
    background: linear-gradient(135deg, #9333EA 0%, #7E22CE 100%);
  }
  
  .step-title {
    font-size: 1.5rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--color-black);
  }
  
  .step-description {
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-text-gray);
  }
  
  .ideal-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    max-width: 900px;
    margin: 0 auto;
  }
  
  .ideal-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: #fafbfc;
    border-radius: var(--radius-md);
    font-size: 1.125rem;
    color: var(--color-text-gray);
  }
  
  .ideal-card svg {
    flex-shrink: 0;
    color: #9333EA;
  }
  
  .ideal-card svg.purple-icon {
    color: #9333EA;
  }
  
  .service-cta {
    background: var(--color-white);
    color: var(--color-black);
    text-align: center;
  }
  
  .cta-content {
    max-width: 700px;
    margin: 0 auto;
  }
  
  .cta-title {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 400;
    margin-bottom: 1rem;
  }
  
  .cta-text {
    font-size: 1.25rem;
    line-height: 1.6;
    margin-bottom: 2rem;
    color: var(--color-text-gray);
  }
  
  .cta-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .cta-content .btn-primary {
    background: #9333EA;
    color: var(--color-white);
    border: 2px solid #9333EA;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(147, 51, 234, 0.2);
  }
  
  .cta-content .btn-primary:hover {
    background: transparent;
    color: #9333EA;
    box-shadow: 0 6px 20px rgba(147, 51, 234, 0.3);
    transform: translateY(-2px);
  }
  
  .btn-secondary {
    background: transparent;
    color: var(--color-black);
    border: 2px solid var(--color-border-light);
    transition: all 0.3s ease;
  }
  
  .btn-secondary:hover {
    background: var(--color-black);
    color: var(--color-white);
    border-color: var(--color-black);
    transform: translateY(-2px);
  }
  
  @media (max-width: 768px) {
    .service-hero-meta {
      flex-direction: column;
      gap: 1rem;
    }
    
    .benefits-content {
      grid-template-columns: 1fr;
    }
    
    .benefits-image {
      order: -1;
    }
    
    .process-step {
      gap: 1rem;
    }
    
    .ideal-grid {
      grid-template-columns: 1fr;
    }
    
    .cta-buttons {
      flex-direction: column;
    }
  }
</style>
